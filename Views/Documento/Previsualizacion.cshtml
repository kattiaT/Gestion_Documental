<!doctype html>
<html>
<head>
  <meta charset="utf-8" />
  <title>Preview + Edit (Drive)</title>
  <style>
    body { font-family: system-ui, sans-serif; margin: 16px; }
    #viewer { width: 100%; height: 80vh; border: 1px solid #ddd; border-radius: 8px; }
    .row { display:flex; gap:8px; align-items:center; margin-bottom:12px; flex-wrap:wrap; }
    input { padding:6px 8px; width:360px; }
    button { padding:8px 12px; cursor:pointer; }
  </style>
</head>
<body>
  <h2>Vista previa + editar</h2>

  <div class="row">
    <!-- Si ya sabes el ID, pégalo aquí -->
    <input id="fileId" placeholder="ID de archivo de Drive (1AbC...)" />
    <button onclick="loadPreview()">Cargar preview</button>
    <button id="openPickerBtn" onclick="openPicker()">Elegir con Picker</button>
    <button id="editBtn" disabled>Editar en Google</button>
  </div>

  <iframe id="viewer" allow="autoplay"></iframe>

  <!-- ======= Lógica ======= -->
  <script>
    let current = { id: null, mime: null };

    function setFile({ id, mime }) {
      current.id = id;
      current.mime = mime || null;

      // Siempre que podamos, usamos /preview en el iframe
      document.getElementById('viewer').src =
        `https://drive.google.com/file/d/${id}/preview`;

      // Habilitar botón Editar si es nativo de Google; si no, igual abrimos en Drive
      const editBtn = document.getElementById('editBtn');
      editBtn.disabled = !id;
      editBtn.onclick = () => {
        const editUrl = buildEditUrl(id, mime);
        window.open(editUrl, '_blank', 'noopener'); // abre editor nativo
      };
    }

    function buildEditUrl(id, mime) {
      // Tipos nativos de Google → URLs /edit
      const DOC  = 'application/vnd.google-apps.document';
      const SHEET= 'application/vnd.google-apps.spreadsheet';
      const SLIDE= 'application/vnd.google-apps.presentation';

      if (mime === DOC)   return `https://docs.google.com/document/d/${id}/edit`;
      if (mime === SHEET) return `https://docs.google.com/spreadsheets/d/${id}/edit`;
      if (mime === SLIDE) return `https://docs.google.com/presentation/d/${id}/edit`;

      // Otros (PDF, Word subido, etc.) → abrir en visor de Drive
      return `https://drive.google.com/file/d/${id}/view`;
    }

    // Si pegaste el ID a mano
    function loadPreview() {
      const id = document.getElementById('fileId').value.trim();
      if (!id) return alert('Pegá un ID de archivo de Drive.');
      setFile({ id }); // sin MIME: igual funciona preview y “Editar” abre /view
    }
  </script>

  <!-- ======= (Opcional) Google Picker ======= -->
  <script>
    // Rellena tus credenciales:
    const CLIENT_ID = '303826226951-9df1v77pn5lvlg72ljk13uleeeqvrjfd.apps.googleusercontent.com';
    const API_KEY   = 'AIzaSyCZGJV0liueX_qRCnfOr5__2sstwyQa_qk';
    const APP_ID    = '303826226951'; // suele ser el número del proyecto
    const SCOPES    = ['https://www.googleapis.com/auth/drive.readonly'];

    let pickerApiLoaded = false;
    let oauthToken = null;

    function openPicker() {
      if (!pickerApiLoaded) return alert('Cargando Picker... esperá 1s y probá de nuevo.');
      if (!oauthToken) return gapi.auth.authorize(
        { client_id: CLIENT_ID, scope: SCOPES, immediate: false },
        handleAuthResult
      );
      createPicker();
    }

    function handleAuthResult(authResult) {
      if (authResult && !authResult.error) {
        oauthToken = authResult.access_token;
        createPicker();
      }
    }

    function createPicker() {
      const view = new google.picker.DocsView()
        .setIncludeFolders(true)
        .setSelectFolderEnabled(false);
      const picker = new google.picker.PickerBuilder()
        .addView(view)
        .setOAuthToken(oauthToken)
        .setDeveloperKey(API_KEY)
        .setAppId(APP_ID)
        .setCallback(pickerCallback)
        .build();
      picker.setVisible(true);
    }

    function pickerCallback(data) {
      if (data.action !== google.picker.Action.PICKED) return;
      const doc = data.docs[0];
      setFile({ id: doc.id, mime: doc.mimeType });
      document.getElementById('fileId').value = doc.id;
    }
  </script>
  <script src="https://apis.google.com/js/api.js?onload=onApiLoad"></script>
  <script src="https://accounts.google.com/gsi/client" async defer></script>
  <script type="text/javascript" src="https://apis.google.com/js/client.js?onload=initPicker"></script>
  <script type="text/javascript" src="https://apis.google.com/js/api.js"></script>
  <script type="text/javascript" src="https://apis.google.com/js/api.js?onload=loadPicker"></script>
  <script>
    function onApiLoad(){ gapi.load('picker', {'callback': function(){ pickerApiLoaded = true; }}); }
    function initPicker(){ /* gapi auth v2 loaded by client.js */ }
    function loadPicker(){ /* alias for clarity */ }
  </script>
</body>
</html>
